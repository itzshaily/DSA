class MyStack {
public:
  
  queue<int>q1;
  queue<int>q2;

    MyStack() {
        
    }
    
    void push(int x) {
        //  both q1 and q2 are empty --
        if(empty())
        q1.push(x);

        else if (q1.empty())
        q2.push(x);

        else
        q1.push(x);
    }
    
    int pop() {
         
         if(empty())
         return 0;


         else if(q1.empty())
         {
         while(q2.size() > 1)
         {
            q1.push(q2.front());
            q2.pop();
         }
         int elem = q2.front();
         q2.pop();
         return elem;
         }

         else{
            while(q1.size() > 1)
         {
            q2.push(q1.front());
            q1.pop();
         }
         int elem = q1.front();
         q1.pop();
         return elem;
         }
    }
    
    int top() {
         
         if(empty())
         return 0;

         else if(q1.empty())
         return q2.back();

         else
         return q1.back();
    }
    
    bool empty() {
        return q1.empty() &&q2.empty();
    }
};
