Given an array of integers arr[]  and a number k. Return the maximum sum of a subarray of size k.

Note: A subarray is a contiguous part of any given array.

Examples:

Input: arr[] = [100, 200, 300, 400] , k = 2
Output: 700
Explanation: arr3  + arr4 = 700, which is maximum.


SOLUTION --


class Solution {
  public:
    int maximumSumSubarray(vector<int>& arr, int k) {
       
        int n = arr.size();
        int currSum =0;
        int maxSum;
        
        for(int i = 0 ; i < k ; i++){
            
             currSum += arr[i];
            
             maxSum = currSum;
            
        }
        
        for(int i = k ; i < n ; i++){
            
            currSum += arr[i] - arr[i-k];
            
            maxSum = max (maxSum , currSum);
        }
        
        return maxSum;
    }
};
